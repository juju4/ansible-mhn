---

- name: MHN Client | registration
  include: registration.yml honeypot=dionaea
- set_fact:
    deploy: /root/.registration_done-dionaea

- shell: "echo {{ server_url }} | sed 's#^http://##; s#^https://##; s#/.*$##; s/:.*$//'"
  register: HPF_HOST
  changed_when: False
- set_fact:
    HPF_PORT: 10000
- shell: "python -c 'import json;obj=json.load(file(\"{{ deploy }}\"));print obj[\"identifier\"]'"
  register: HPF_IDENT
  changed_when: False
- shell: "python -c 'import json;obj=json.load(file(\"{{ deploy }}\"));print obj[\"secret\"]'"
  register: HPF_SECRET
  changed_when: False

- block:
    - name: apt | Install dionaea dependencies
      apt: name={{ item }} state=present update_cache=yes cache_valid_time=3600
      with_items:
        - python-software-properties
        - git
        - supervisor
        - patch

    - name: Ubuntu | Add honeynet nightly ppa
      apt_repository: repo='ppa:honeynet/nightly'
      when: ansible_distribution == 'Ubuntu'

    - name: Ubuntu | Install dionaea - precise
      apt: name=dionaea state=present update_cache=yes
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'precise'
    - name: Ubuntu | Install dionaea - trusty
      apt: name=dionaea-phibo state=present update_cache=yes
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'trusty'
    - name: Ubuntu | Install dionaea - xenial
      fail: msg="honeynet ppa has no xenial built currently."
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'xenial'
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: yum | Install dionaea dependencies
  yum: name={{ item }} state=present update_cache=yes
  with_items:
    - git
    - supervisor
    - patch
## FIXME! rpm not available
#    - dionaea
  when: ansible_os_family == "RedHat"

- template: src=dionaea.hpfeeds.patch dest=/tmp/dionaea.hpfeeds.patch mode=0644

- copy: src=hpfeeds.py dest=/usr/lib/dionaea/python/dionaea/hpfeeds.py mode=0755

## remote_src needed else doing from master: fatal: [node1] => input file not found at /tmp/dionaea.hpfeeds.patch or /tmp/dionaea.hpfeeds.patch
- name: apply patch dionaea.hpfeeds.patch
  patch: >
    src=/tmp/dionaea.hpfeeds.patch
    basedir=/
    strip=0
    remote_src=True
    backup=yes

- file: "path={{ item }} state=directory mode=0755"
  with_items:
    - /var/dionaea/wwwroot
    - /var/dionaea/binaries
    - /var/dionaea/log
    - /var/dionaea/bistreams

- name: Make directory owned by nobody user
  file:
    path: /var/dionaea
    owner: nobody
    group: nogroup
    recurse: yes

- replace: "dest=/etc/dionaea/dionaea.conf regexp='{{ item.regexp }}' replace='{{ item.replace }}' backup=yes"
  with_items:
## FIXME! not idempotent
#    - { regexp: 'var/dionaea/', replace: '' }
#    - { regexp: 'log/', replace: '/var/dionaea/log/' }
    - { regexp: 'levels = "all"', replace: 'levels = "warning,error"' }
    - { regexp: 'mode = "getifaddrs"', replace: 'mode = "manual"' }
    - { regexp: 'addrs = { eth0 = \["::"\] }', replace: 'addrs = { eth0 = ["::", "0.0.0.0"] }' }

- name: set dionaea supervisor config
  copy: "src=dionaea.conf dest={{ supervisor_confdir }}/dionaea.{{ supervisor_ext }} mode=0644"
  notify:
    - supervisor update
