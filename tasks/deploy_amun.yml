---

- name: MHN Client | registration
  include: registration.yml honeypot=amun
- set_fact:
    deploy: /root/.registration_done-amun

- shell: "echo {{ server_url }} | sed 's#^http://##; s#^https://##; s#/.*$##; s/:.*$//'"
  register: HPF_HOST
  changed_when: False
- set_fact:
    HPF_PORT: 10000
- shell: "python -c 'import json;obj=json.load(file(\"{{ deploy }}\"));print obj[\"identifier\"]'"
  register: HPF_IDENT
  changed_when: False
- shell: "python -c 'import json;obj=json.load(file(\"{{ deploy }}\"));print obj[\"secret\"]'"
  register: HPF_SECRET
  changed_when: False

- name: Install amun dependencies
  package:
    name:
      - git
      - supervisor
      - python-pip
    state: present
    update_cache: yes
    cache_valid_time: 3600

- name: Check if amun root dir exists
  stat: path=/opt/amun
  register: amundir
- name: git clone amun
  git:
    repo=https://github.com/zeroq/amun.git
    dest=/opt/amun
    version=development
  when: not amundir.stat.exists

- name: Update Amun configuration
  replace: "dest=/opt/amun/conf/amun.conf regexp='{{ item.regexp }}' replace='{{ item.replace }}' backup=yes"
  with_items:
    - { regexp: 'ip: 127.0.0.1', replace: 'ip: 0.0.0.0' }
    - { regexp: '    vuln-http,', replace: "#   vuln-http," }
    - { regexp: 'log_modules:', replace: "log_modules:\\\n    log-hpfeeds" }

- name: Ensure Amun hexdumps directory exists
  file: path=/opt/amun/hexdumps state=directory mode=0755

- name: Update proc and ulimit for Amun
  shell: "{{ item }}"
  with_items:
    - 'echo "104854" > /proc/sys/fs/file-max'
    - 'ulimit -Hn 104854'
    - 'ulimit -n 104854'

- name: Set Amun hpfeeds logs
  template: src=log-hpfeeds.conf dest=/opt/amun/conf/log-hpfeeds.conf mode=0644

- name: set amun supervisor config
  template: "src=amun.conf dest={{ supervisor_confdir }}/amun.{{ supervisor_ext }} mode=0644"
  notify:
    - supervisor update
