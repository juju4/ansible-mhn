---
## https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/

- block:
    - name: Apt | Add Mongodb repository key
      apt_key: keyserver=hkp://keyserver.ubuntu.com:80 id=0C49F3730359A14518585931BC711F9BA15703C6
    - name: Debian | Add Mongodb repository
      apt_repository: repo='deb http://repo.mongodb.org/apt/{{ ansible_distribution|lower }} {{ ansible_distribution_release }}/mongodb-org/3.4 main' state=present
      when: ansible_distribution == 'Debian'
    - name: Ubuntu | Add Mongodb repository
      apt_repository: repo='deb http://repo.mongodb.org/apt/{{ ansible_distribution|lower }} {{ ansible_distribution_release }}/mongodb-org/3.4 multiverse' state=present
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_release != 'bionic'
    - block:
        - name: ensure systemd config directory exists
          file: dest=/usr/lib/systemd/system state=directory mode=0755
        - name: configure systemd config file (not included)
## FIXME! FAILED! => {"changed": true, "failed": true, "msg": "Destination /lib/systemd/system not writable"}
#         template: src=mongodb.service.j2 dest=/lib/systemd/system/mongod.service mode=0644
          template: src=mongodb.service.j2 dest=/usr/lib/systemd/system/mongod.service mode=0644
      when: ansible_service_mgr == 'systemd'
## http://askubuntu.com/questions/757384/can-i-use-14-04-mongodb-packages-with-16-04
#    - name: unmask mongodb from systemctl
#      command: "systemctl unmask mongodb"
  when: ansible_os_family == 'Debian'

## https://docs.mongodb.com/manual/tutorial/install-mongodb-on-red-hat/
- block:
## FIXME! fails sometimes 'Package mongodb-org-3.2.10-1.el7.x86_64.rpm is not signed'... https://jira.mongodb.org/browse/SERVER-26583
    - name: install mongodb rpm key
      rpm_key: key=https://www.mongodb.org/static/pgp/server-3.4.asc state=present
    - name: install mongodb yum repository
      template: src=mongodb.repo.j2 dest=/etc/yum.repos.d/mongodb.repo mode=0644
  when: ansible_os_family == "RedHat"

- name: apt | Install mongodb
  apt: name={{ mhn_mongodb_pkg }} state=present update_cache=yes cache_valid_time=3600
  with_items: "{{ mhn_mongodb_pkg }}"
  when: ansible_os_family == 'Debian'

- name: yum | Install mongodb
  yum: name=mongodb-org state=present update_cache=yes
  when: ansible_os_family == "RedHat"
  register: rpminstall

## disappeared in mongodb3, https://docs.mongodb.com/manual/tutorial/rotate-log-files/
#- name: set log rotation for mongodb
#  lineinfile: dest=/etc/mongod.conf line="{{ item }}"
#  with_items:
#    - 'logpath=/var/log/mongodb/mongod.log'
#    - 'logrotatesize=20M'
#    - 'logrotatebackups=7'

- name: evaluating /var/lib/mongodb
  stat: path="{{ mongodb_varlib }}"
  register: mongodblib
- block:
## FIXME! https://github.com/ansible/ansible/issues/17136
    - name: ensure appropriate permissions for /var/lib/mongodb
      file:
        dest: "{{ item }}"
        owner: mongodb
      with_fileglob:
        - "{{ mongodb_varlib }}/*"
## {"failed": true, "item": "/var/lib/mongodb/local.ns", "msg": "file (/var/lib/mongodb/local.ns) is absent, cannot continue", "path": "/var/lib/mongodb/local.ns", "state": "absent"}
      ignore_errors: true
  when: mongodblib.stat.exists

- include: mongodb-auth.yml
  when: mhn_mongodb_auth

## https://medium.com/@alexbyk/mongodb-at-shared-hosting-security-surprises-c441ecb84b54
## https://jira.mongodb.org/browse/SERVER-22829
- name: avoid making mongodb directory word-writable even if non-shared server
  file:
    dest: "{{ mongodb_varlib }}"
    mode: '0750'

- name: RedHat7 | reload systemd
  systemd:
    daemon_reload: yes
    name: "{{ mongodb_svc }}"
  when: >
    (ansible_os_family == 'RedHat' and ansible_distribution_version.split(".")[0] == '7') and
    rpminstall.changed and
    not (ansible_virtualization_type is defined and (ansible_virtualization_type == "docker"))

- name: enable service mongodb
  service: name={{ mongodb_svc }} enabled=yes state=started
  when: not (ansible_virtualization_type is defined and (ansible_virtualization_type == "docker"))

- name: Docker | start service mongodb
  command: "/usr/bin/mongod --config {{ mongodb_conf }} --fork"
  become: yes
  become_user: mongodb
  ignore_errors: true
  when: (ansible_virtualization_type is defined and (ansible_virtualization_type == "docker"))
